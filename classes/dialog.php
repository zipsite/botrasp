<?php
class Dialog {
    public $Api;
    public $CallBack;
    public $User;

    function pars() {
        $this->User = new \User($this->CallBack->getPlatform(), $this->CallBack->getIdUser());
        $result = $this->User->loadUserData();
        if ($result == 1) {          
            $path = explode('/', stripslashes(htmlspecialchars(trim($this->User->path))));
            $perm = $this->User->getUserPermition();
            if (empty($path[0]) and ($perm == "normal" or $perm == "admin")) {
                if (empty($path[1])) {
                    if ($this->CallBack->getMessage() == '1 –ö–æ—Ä–ø—É—Åüè¢') {
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '1 –ö–æ—Ä–ø—É—Åüè¢', $this->Api->keys->home);
                    }
                    elseif ($this->CallBack->getMessage() == '2 –ö–æ—Ä–ø—É—Åüè¢') {
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '2 –ö–æ—Ä–ø—É—Åüè¢', $this->Api->keys->home);
                    }
                    elseif ($this->CallBack->getMessage() == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏') {
                        $this->User->setPath('setting/');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', $this->Api->keys->setting);
                    }
                }
            }
            /*
            elseif ($path[0] == 'admin' and $perm == "admin") {
                
            }
            */
            elseif ($path[0] == 'setting' and ($perm == "normal" or $perm == "admin")) {
                if (empty($path[1])) {
                    if ($this->CallBack->getMessage() == '–§–æ–Ω') {
                        $this->User->setPath('setting/bg');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–§–æ–Ω', $this->Api->keys->settingBg);
                    }
                    elseif ($this->CallBack->getMessage() == '–ü–æ–¥–ø–∏—Å–∫–∞') {
                        $this->User->setPath('setting/type');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ü–æ–¥–ø–∏—Å–∫–∞', $this->Api->keys->settingSub);
                    }
                    elseif ($this->CallBack->getMessage() == '–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å') {
                        $this->User->setPath('/');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–¢—É—Ç —Ç–∏–ø–æ —Å—Å—ã–ª–∫–∞', $this->Api->keys->home);
                    }
                    elseif ($this->CallBack->getMessage() == '–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ') {
                        $this->User->setPath('setting/dlt');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', $this->Api->keys->settingdlt);
                    }
                    elseif ($this->CallBack->getMessage() == '–û—Ç–º–µ–Ω–∞') {
                        $this->User->setPath('/');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–û—Ç–º–µ–Ω–∞', $this->Api->keys->home);
                    }
                }
                elseif ($path[1] == 'bg') {
                    if($this->CallBack->getMessage() == '–ò–∑–º–µ–Ω–∏—Ç—å') {
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é', $this->Api->keys->settingBg);
                    }
                    elseif ($this->CallBack->getMessage() == '–û—Ç–º–µ–Ω–∞') {
                        $this->User->setPath('setting/');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–û—Ç–º–µ–Ω–∞', $this->Api->keys->setting);
                    }
                }
                elseif ($path[1] == 'type') {
                    if ($this->CallBack->getMessage() == '–°—Ç—É–¥–µ–Ω—Ç') {
                        $this->User->setType('student');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã', $this->Api->keys->close);
                        $this->User->setPath('setting/sub');
                    }
                    elseif ($this->CallBack->getMessage() == '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å') {
                        $this->User->setType('prepod');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è', $this->Api->keys->close);
                        $this->User->setPath('setting/sub');
                    }
                    elseif ($this->CallBack->getMessage() == '–û—Ç–º–µ–Ω–∞') {
                        $this->User->setPath('setting/');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–û—Ç–º–µ–Ω–∞', $this->Api->keys->setting);
                    }
                }
                elseif ($path[1] == 'sub') {
                    $this->User->setSubscribe($this->CallBack->getMessage());
                    $this->User->setPath('/');
                    $this->Api->sendMessage($this->CallBack->getIdUser(), '–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å!', $this->Api->keys->setting);
                }
                elseif ($path[1] == 'dlt') {
                    if ($this->CallBack->getMessage() == '–î–∞') {
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ü—Ä–æ—â–∞–π—Ç–µ...', $this->Api->keys->close);
                        $this->User->dltUser();
                    }
                    elseif ($this->CallBack->getMessage() == '–ù–µ—Ç') {
                        $this->User->setPath('setting/');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', $this->Api->keys->close);
                    }

                }
            }
            elseif ($path[0] == 'start' and $perm == "guest") {
                if ($path[1] == 'type') {
                    if ($this->CallBack->getMessage() == '–°—Ç—É–¥–µ–Ω—Ç') {
                        $this->User->setType('student');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã', $this->Api->keys->close);
                    }
                    elseif ($this->CallBack->getMessage() == '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å') {
                        $this->User->setType('prepod');
                        $this->Api->sendMessage($this->CallBack->getIdUser(), '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è', $this->Api->keys->close);
                    }
                    $this->User->setPath('start/sub');
                }
                elseif ($path[1] == 'sub') {
                    $this->User->setSubscribe($this->CallBack->getMessage());
                    $this->User->setPerm('normal');
                    $this->User->setPath('/');
                    $this->Api->sendMessage($this->CallBack->getIdUser(), '–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å!', $this->Api->keys->close);
                    $this->Api->sendMessage($this->CallBack->getIdUser(), '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—è—Ç—É—é –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞! –ü—Ä–∏—à–ª–æ –º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ
                    –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ —Å—Å—ã–ª–æ—á–∫–µ! *–°—Å—ã–ª–∫–∞* <br> –ë–æ—Ç —Å—Ç–æ–∏—Ç –Ω–∞ –ø–ª–∞—Ç–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ, —Ç–∞–∫ —á—Ç–æ –º–æ–∂–µ—Ç–µ
                    –ø–æ–º–æ—á—å –¥–µ–Ω—é—à–∫–æ–π! *–°—Å—ã–ª–∫–∞*<br>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é.', $this->Api->keys->close);
                    $this->Api->sendMessage($this->CallBack->getIdUser(), '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞', $this->Api->keys->home);

                }
                else {
                    $this->Api->sendMessage($this->CallBack->getIdUser(), '–ù–∞–∂–º–∏ –ù–∞—á–∞—Ç—å', $this->Api->keys->start);
                }
            }
            else {
                if ($perm == 'guest') {
                    $this->User->dltUser();
                    $this->User->crtNewUser();
                    $this->User->setPath('start/');
                }
                elseif ($perm == 'normal' or $perm == 'admin') {
                    $this->User->setPath('/');
                    $this->Api->sendMessage($this->CallBack->getIdUser(), '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞', $this->Api->keys->home);
                }
            }

            /*
            /start              guest
            /admin              admin
            /admin/mgs          admin
            /setting            normal admin
            /setting/setBg      normal admin
            /setting/setSub     normal admin guest
            /setting/dltUser    normal admin
            /setting/donate     normal admin
            */
        }
        elseif ($result < 1) {
            $this->User->crtNewUser();
            $this->Api->sendMessage($this->CallBack->getIdUser(), '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è!', $this->Api->keys->close);
            sleep(1);
            $this->Api->sendMessage($this->CallBack->getIdUser(), '–Ø –±–æ—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.', $this->Api->keys->close);
            sleep(1);
            $this->Api->sendMessage($this->CallBack->getIdUser(), '–î–∞–≤–∞–π –ø—Ä–æ–≤–µ–¥—ë–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É!', $this->Api->keys->close);
            sleep(1);
            $this->User->setPath('start/type');
            $this->Api->sendMessage($this->CallBack->getIdUser(), '–ö—Ç–æ —Ç—ã?', $this->Api->keys->settingSub);

        }
        elseif ($result > 1) {
            $this->User->dltUser();
        }
    }

}
?>